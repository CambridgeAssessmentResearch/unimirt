% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MirtCombine.R
\name{MirtCombine}
\alias{MirtCombine}
\title{Combine two estimated IRT models into a single object}
\usage{
MirtCombine(mirtobj1, mirtobj2)
}
\arguments{
\item{mirtobj1}{An estimated IRT model (of class SingleGroupClass) estimated either using the function \link[unimirt]{unimirt}
or by applying the function \link[mirt]{mirt} directly. This object defines the
ability scale and is given priority in specifying item parameters.}

\item{mirtobj2}{An estimated IRT model (of class SingleGroupClass) estimated either using the function \link[unimirt]{unimirt}
or by applying the function \link[mirt]{mirt} directly.}
}
\value{
A estimated "mirt" object.
}
\description{
This function takes two fitted unidimensional IRT models (fitted using mirt or unimirt) 
as an input, and combines them into a single object.
The function assumes that all parameters are calibrated to a common scale
to begin with (e.g. using the function 'MirtStockingLordRecalibrate').
Group parameters are defined by the first object and
if common items occur in both objects then parameters from the first
object are taken in preference over parameters from the second.
}
\details{
Note that this function will not generally give the same results
as concurrent parameter estimation. It's intention is to be used
as a pre-cursor for other activities (such as item selection using
'runItemSelectionApp') where it is convenient to store item information
in a single object.
}
\examples{
\dontrun{
dat1=mathsdata[1:300,1:8]
dat2=mathsdata[301:400,5:10]
mirt1=unimirt(dat1,"Rasch")
MirtTidyCoef(mirt1)
mirt2=unimirt(dat2,"Rasch")
MirtTidyCoef(mirt2)
mirtcomb=MirtCombine(mirt1,mirt2)
MirtTidyCoef(mirtcomb)
}
}
